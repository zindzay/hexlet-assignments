plugins {
  id 'org.springframework.boot' version '3.0.6'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
  id 'com.adarshr.test-logger' version '3.0.0'
}


repositories {
  mavenCentral()
}

dependencies {

  implementation(
          'org.springframework.boot:spring-boot-starter-web',
          'org.springframework.data:spring-data-commons',
          'org.springframework.boot:spring-boot-starter-validation',
          'org.springframework.boot:spring-boot-starter-data-jpa',
          'org.liquibase:liquibase-core',
          'org.springdoc:springdoc-openapi-ui:1.6.15',
          // Подключаем querydsl
          // Нужно для самостоятельной работы
          'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  )

  testImplementation(
          'org.springframework.boot:spring-boot-starter-test',
          'com.github.database-rider:rider-junit5:1.36.0'

  )
  runtimeOnly 'com.h2database:h2:1.4.200'
  compileOnly 'org.projectlombok:lombok'


  // Благодаря этим зависимостям при компиляции будут сформированы Q классы
  annotationProcessor(
          'org.projectlombok:lombok',
          'com.querydsl:querydsl-apt:5.0.0:jakarta',
          'jakarta.persistence:jakarta.persistence-api:3.1.0'
  )

}

test {
  useJUnitPlatform()
}

testlogger {
  showStandardStreams = true
}
